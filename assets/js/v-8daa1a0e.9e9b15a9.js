"use strict";(self.webpackChunktsoa_docs=self.webpackChunktsoa_docs||[]).push([[509],{4958:(e,t,a)=>{a.r(t),a.d(t,{data:()=>o});const o={key:"v-8daa1a0e",path:"/",title:"Home",lang:"en-US",frontmatter:{home:!0,title:"Home",heroText:"tsoa",tagline:"OpenAPI-compliant REST APIs using TypeScript and Node",navbar:!0,sidebar:!1,actions:[{text:"Get Started →",link:"/introduction/"}],pageClass:"home-class",footer:"MIT Licensed"},excerpt:"",headers:[],filePathRelative:"readme.md",git:{updatedTime:1633178923e3,contributors:[{name:"WoH",email:"wolfgang.hobmaier@sensoring.de",commits:4}]}}},2319:(e,t,a)=>{a.r(t),a.d(t,{default:()=>n});var o=a(6252);const r={class:"features"},s=[(0,o._)("div",{class:"feature"},[(0,o._)("h2",null,"TypeScript ♥ OpenAPI"),(0,o._)("p",null,"Automatically get accurate, complete, correct and up-to-date OpenAPI Specifications from your TypeScript code")],-1),(0,o._)("div",{class:"feature"},[(0,o._)("h2",null,"Type-safe"),(0,o._)("p",null,"No more manual validation. tsoa makes sure the input can be assigned according to the types you specified or will throw automatically if it can't.")],-1),(0,o._)("div",{class:"feature"},[(0,o._)("h2",null,"Flexible"),(0,o._)("p",null,"Doesn't matter if you use express, koa, hapi or your own framework. We can support it out of the box or with a custom template.")],-1)],i={},n=(0,a(3744).Z)(i,[["render",function(e,t){return(0,o.wg)(),(0,o.iD)("div",r,s)}]])},3744:(e,t)=>{t.Z=(e,t)=>{for(const[a,o]of t)e[a]=o;return e}}}]);