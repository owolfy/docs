"use strict";(self.webpackChunktsoa_docs=self.webpackChunktsoa_docs||[]).push([[361],{9537:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-31036194",path:"/routes.html",title:"Consuming generated routes",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Using automatic controllers discovery",slug:"using-automatic-controllers-discovery",children:[]},{level:2,title:"Manually telling tsoa which controllers to use in the app entry file",slug:"manually-telling-tsoa-which-controllers-to-use-in-the-app-entry-file",children:[]}],filePathRelative:"routes.md",git:{updatedTime:1588512641e3,contributors:[{name:"WoH",email:"wolfgang.hobmaier@sensoring.de",commits:2}]}}},4189:(n,s,a)=>{a.r(s),a.d(s,{default:()=>U});var e=a(6252);const t=(0,e._)("h1",{id:"consuming-generated-routes",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#consuming-generated-routes","aria-hidden":"true"},"#"),(0,e.Uk)(" Consuming generated routes")],-1),o=(0,e._)("p",null,[(0,e.Uk)("You have two options for how to tell tsoa where it can find the controllers that it will use to create the auto-generated "),(0,e._)("code",null,"routes.ts"),(0,e.Uk)(" file.")],-1),p=(0,e._)("h2",{id:"using-automatic-controllers-discovery",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#using-automatic-controllers-discovery","aria-hidden":"true"},"#"),(0,e.Uk)(" Using automatic controllers discovery")],-1),l=(0,e.Uk)("You can tell "),r=(0,e._)("code",null,"tsoa",-1),c=(0,e.Uk)(" to use your automatic controllers discovery by providing a "),u={href:"http://www.globtester.com/",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("minimatch glob"),k=(0,e.Uk)(" in the "),d={href:"https://github.com/lukeautry/tsoa/blob/master/src/config.ts",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("config"),m=(0,e.Uk)(" file (e.g. "),h=(0,e._)("code",null,"tsoa.json",-1),g=(0,e.Uk)("). It can be provided on "),f=(0,e._)("code",null,"config.spec",-1),y=(0,e.Uk)(" or "),w=(0,e._)("code",null,"config.routes",-1),v=(0,e.Uk)("."),q=(0,e.uE)('<p>Pros:</p><ul><li>New developers can add a controller without having to know how tsoa &quot;crawls&quot; for the controllers. As long as their controller is caught by the glob that you provide, the controller will be added to the OpenAPI documentation and to the auto-generated <code>routes.ts</code> file.</li></ul><p>Cons:</p><ul><li>It could be potentially slower (but not significantly slow) than the alternative option described further down in the readme.</li></ul><p>As you can see from the the controllers globs patterns below, you can provide multiple globs of various patterns:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;entryFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;routes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&quot;routesDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;middleware&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;controllerPathGlobs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token string">&quot;./dir-with-controllers/*&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;./recursive-dir/**/*&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;./custom-filerecursive-dir/**/*.controller.ts&quot;</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="manually-telling-tsoa-which-controllers-to-use-in-the-app-entry-file" tabindex="-1"><a class="header-anchor" href="#manually-telling-tsoa-which-controllers-to-use-in-the-app-entry-file" aria-hidden="true">#</a> Manually telling tsoa which controllers to use in the app entry file</h2><p>Tsoa can &quot;crawl&quot; the index file to look for controllers that have the <code>@Route</code> decorator.</p><p>Pros:</p><ul><li>The tsoa route generation will be faster.</li></ul><p>Cons:</p><ul><li>New developers on your team might add a controller and not understand why the new controller was not exposed to the router or to the OpenAPI generation. If this is a problem for you, please us the automatic controller discovery option described above.</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> methodOverride <span class="token keyword">from</span> <span class="token string">&quot;method-override&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> bodyParser <span class="token keyword">from</span> <span class="token string">&quot;body-parser&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> RegisterRoutes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./routes&quot;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ########################################################################</span>\n<span class="token comment">// controllers need to be referenced in order to get crawled by the generator</span>\n<span class="token keyword">import</span> <span class="token string">&quot;./users/usersController&quot;</span><span class="token punctuation">;</span>\n<span class="token comment">// ########################################################################</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span> extended<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">methodOverride</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">RegisterRoutes</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',13),_={},U=(0,a(3744).Z)(_,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,o,p,(0,e._)("p",null,[l,r,c,(0,e._)("a",u,[i,(0,e.Wm)(a)]),k,(0,e._)("a",d,[b,(0,e.Wm)(a)]),m,h,g,f,y,w,v]),q],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);