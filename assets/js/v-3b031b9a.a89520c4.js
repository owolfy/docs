"use strict";(self.webpackChunktsoa_docs=self.webpackChunktsoa_docs||[]).push([[730],{4181:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-3b031b9a",path:"/path-mapping.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"Path mapping",slug:"path-mapping",children:[]}],filePathRelative:"path-mapping.md",git:{updatedTime:1588193186e3,contributors:[{name:"WoH",email:"wolfgang.hobmaier@sensoring.de",commits:1}]}}},5094:(n,s,a)=>{a.r(s),a.d(s,{default:()=>k});var t=a(6252);const e=(0,t._)("h3",{id:"path-mapping",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#path-mapping","aria-hidden":"true"},"#"),(0,t.Uk)(" Path mapping")],-1),p=(0,t.Uk)("Per the "),o={href:"https://www.typescriptlang.org/docs/handbook/basic-types.html",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("TypeScript Handbook"),u=(0,t.Uk)(" under "),l={href:"https://www.typescriptlang.org/docs/handbook/module-resolution.html",target:"_blank",rel:"noopener noreferrer"},i=(0,t.Uk)("module resolution"),c=(0,t.Uk)(":"),m=(0,t.uE)('<blockquote><p>Sometimes modules are not directly located under baseUrl. For instance, an import to a module &quot;jquery&quot; would be translated at runtime to &quot;node_modules\\jquery\\dist\\jquery.slim.min.js&quot;. Loaders use a mapping configuration to map module names to files at run-time, see RequireJs documentation and SystemJS documentation.</p><p>The TypeScript compiler supports the declaration of such mappings using &quot;paths&quot; property in tsconfig.json files. Here is an example for how to specify the &quot;paths&quot; property for jquery.</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token comment">// This must be specified if &quot;paths&quot; is.</span>\n    <span class="token string">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&quot;jquery&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules/jquery/dist/jquery&quot;</span><span class="token punctuation">]</span> <span class="token comment">// This mapping is relative to &quot;baseUrl&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>If you have a project that utilized this functionality, you can configure the internal generators to use the correct paths by providing a compilerOptions property to route configuration property in tsoa.json.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token string">&quot;spec&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;routes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n   <span class="token string">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./path/to/base/url&quot;</span><span class="token punctuation">,</span>\n        <span class="token string">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token string">&quot;exampleLib&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./path/to/example/lib&quot;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',4),b={},k=(0,a(3744).Z)(b,[["render",function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,(0,t._)("p",null,[p,(0,t._)("a",o,[r,(0,t.Wm)(a)]),u,(0,t._)("a",l,[i,(0,t.Wm)(a)]),c]),m],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,t]of s)n[a]=t;return n}}}]);